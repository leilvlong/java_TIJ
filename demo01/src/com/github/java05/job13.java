package com.github.java05;



/*
多态意味着不同的形式：
        在面向对象的程序设计中，我们持有从基类继承而来的相同接口，以及使用该接口的不同形式
    不用版本的动态绑定方法
        多态是一种不能单独来看待的特性，它只能作为类关系全景中的一部分，与其他特性协同工作
    良好的运用多态，使其不仅包括个别类的成员和消息，而且还包括类与类之间的共同特性以及他们
    之间的关系
        这样做会带来很多成效：更快的开发效率，更好的代码组织，更强的扩展性，更容易维护的代码
 */
public class job13  {
}
